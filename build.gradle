ext {
    sdkVersion = 30
    minSdkVersion = 21
    libraryGroupId = 'androidx.essentials'
    githubProperties = 'github.properties'
    versionProperties = 'version.properties'
    mavenUrl = 'https://maven.pkg.github.com/kunal26das/androidx-essentials'
}

buildscript {

    ext {
        nav_version = '2.3.5'
        core_version = '1.6.0'
        gson_version = '2.8.7'
        koin_version = '3.1.2'
        room_version = '2.3.0'
        paging_version = '3.0.0'
        rxjava_version = '3.0.0'
        fluent_version = '0.0.11'
        kotlin_version = '1.5.21'
        activity_version = '1.2.4'
        fragment_version = '1.3.5'
        material_version = '1.4.0'
        retrofit_version = '2.9.0'
        appcompat_version = '1.3.0'
        lifecycle_version = '2.3.1'
        coroutines_version = '1.5.1-native-mt'
    }

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath 'com.google.gms:google-services:4.3.8'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.7.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            url = this.ext.mavenUrl
            credentials {
                username = "kunal26das"
                password = "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"
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def getVersionCode(name) {
    def version = file(this.ext.versionProperties)
    def properties = new Properties()
    properties.load(new FileInputStream(version))
    def versionMajor = Integer.valueOf(properties["${name}.version.major"])
    def versionMinor = Integer.valueOf(properties["${name}.version.minor"])
    def versionPatch = Integer.valueOf(properties["${name}.version.patch"])
    return ((Integer.valueOf(this.ext.minSdkVersion) * 10000000) +
            (Integer.valueOf(versionMajor) * 10000) +
            (Integer.valueOf(versionMinor) * 100) +
            (Integer.valueOf(versionPatch) * 1))
}

def getVersionName(name) {
    def version = file(this.ext.versionProperties)
    def properties = new Properties()
    properties.load(new FileInputStream(version))
    def versionMajor = Integer.valueOf(properties["${name}.version.major"])
    def versionMinor = Integer.valueOf(properties["${name}.version.minor"])
    def versionPatch = Integer.valueOf(properties["${name}.version.patch"])
    return "${versionMajor}.${versionMinor}.${versionPatch}"
}