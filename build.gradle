ext {
    sdkVersion = 33
    minSdkVersion = 23
    libraryGroupId = 'androidx.essentials'
    githubProperties = 'github.properties'
    versionProperties = 'version.properties'
    mavenUrl = 'https://maven.pkg.github.com/kunal26das/androidx-essentials'
}

buildscript {

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
        classpath 'com.google.gms:google-services:4.3.15'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.10'
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.45'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.4'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def getVersionCode(name) {
    def version = file(this.ext.versionProperties)
    def properties = new Properties()
    properties.load(new FileInputStream(version))
    def versionMajor = Integer.valueOf(properties["${name}.version.major"])
    def versionMinor = Integer.valueOf(properties["${name}.version.minor"])
    def versionPatch = Integer.valueOf(properties["${name}.version.patch"])
    return ((Integer.valueOf(this.ext.minSdkVersion) * 10000000) +
            (Integer.valueOf(versionMajor) * 10000) +
            (Integer.valueOf(versionMinor) * 100) +
            (Integer.valueOf(versionPatch) * 1))
}

def getVersionName(name) {
    def version = file(this.ext.versionProperties)
    def properties = new Properties()
    properties.load(new FileInputStream(version))
    def versionMajor = Integer.valueOf(properties["${name}.version.major"])
    def versionMinor = Integer.valueOf(properties["${name}.version.minor"])
    def versionPatch = Integer.valueOf(properties["${name}.version.patch"])
    return "${versionMajor}.${versionMinor}.${versionPatch}"
}